package basic.concurrent;

import java.io.IOException;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;

public class Test
{

  public static void main() throws InterruptedException, ExecutionException
  {
    ExecutorService x = Executors.newFixedThreadPool( 3 );
    Future<?> y = x.submit( new Runnable()
      {

        @Override
        public void run()
        {

        }

      } );
    y.get();
    
    
    x.submit( new FutureTask<Void>( new Callable<Void>()
        {

          @Override
          public Void call() throws IOException
          {
            new IOException("Peter");
            return null;
          }

        } ) );
  }
}
